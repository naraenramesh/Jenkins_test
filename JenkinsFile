node {
    // Job properties: Define parameters, build discarding, triggers, etc.
    properties([
        // Define build parameters
        parameters([
            string(defaultValue: 'main', description: 'Branch to build', name: 'BRANCH'),
            booleanParam(defaultValue: false, description: 'Enable debugging', name: 'DEBUG_MODE'),
            choice(choices: ['dev', 'staging', 'prod'], description: 'Select the deployment environment', name: 'ENVIRONMENT')
        ]),

        // Discard old builds, keeping only the last 10 builds
        buildDiscarder(logRotator(numToKeepStr: '10')),

        // Set build triggers: Poll the SCM for changes every 5 minutes
        pipelineTriggers([pollSCM('H/5 * * * *')])
    ])

    // Define stages for the pipeline
    stage('Preparation') {
        steps {
            echo "Preparing to build branch: ${params.BRANCH}"
            echo "Environment selected: ${params.ENVIRONMENT}"
        }
    }

    stage('Checkout') {
        steps {
            // Simulate git checkout
            echo "Checking out branch: ${params.BRANCH}"
            // In a real pipeline, you would use:
            // checkout scm
        }
    }

    stage('Build') {
        steps {
            script {
                if (params.DEBUG_MODE) {
                    echo "Debug mode is ON"
                } else {
                    echo "Debug mode is OFF"
                }
            }

            // Simulate a build step
            echo "Building the project for environment: ${params.ENVIRONMENT}"
        }
    }

    stage('Test') {
        steps {
            // Simulate a test step
            echo "Running tests on branch: ${params.BRANCH}"
        }
    }

    stage('Deploy') {
        steps {
            echo "Deploying to environment: ${params.ENVIRONMENT}"
        }
    }
}
